;;;;;;;;;;;;;;;;;;;
; About php.ini    ;
;;;;;;;;;;;;;;;;;;;

; PHP's initialization file, generally called php.ini, is responsible for
; configuring many of the aspects of PHP's behavior.

; PHP attempts to find and load this configuration from a number of locations.
; The following is a summary of its search order:
; - SAPI module specific location (PHPIniDir directive in Apache 2, -c command
;   line option in CGI and CLI, php_ini parameter in NSAPI, PHP_INI_PATH
;   environment variable in THTTPD)
; - The PHPRC environment variable. (As of PHP 5.2.0)
; - The web server's directory (for SAPI modules), or directory of PHP
;   (otherwise in Windows)
; - Windows directory (C:\windows or C:\winnt) (for Windows),
; - If none of the above worked, PHP will finally fall back to the hardcoded
;   default (--with-config-file-path=/usr/local/lib/php.ini on most systems,
;   /etc/php.ini on Darwin).

;;;;;;;;;;;;;;;;;;
; About this file ;
;;;;;;;;;;;;;;;;;;

; This file can be used to configure PHP's behavior globally, for each SAPI
; module, and for individual scripts. You can set PHP configuration options
; through php.ini, .htaccess, httpd.conf or within an application's ini file
; using ini_set(). 

;;;;;;;;;;;;;;;;;;;;;;
; About this directive ;
;;;;;;;;;;;;;;;;;;;;;;

; This directive tells PHP whether to suppress certain classes of error messages.
; It is extremely useful to find typos and to save time for debugging.
; If a script is written well, it should not trigger errors or warnings.
; However, poor code can trigger them. If you are using a robust modern
; code editor, it is recommended that you enable their equivalent to
; syntax checking so you can spot errors faster.

error_reporting = E_ALL & ~E_NOTICE

;;;;;;;;;;;;;;;;;;;;
; About error logging ;
;;;;;;;;;;;;;;;;;;;;

; Error logging allows you to log errors and warnings which occur in PHP scripts
; to various locations, such as the server's error log, syslog, a database, or
; to a custom location specified by the user.
; For many developers, this is the first option they would choose.

log_errors = On
error_log = /var/log/php_errors.log
log_level = warning

;;;;;;;;;;;;;;;;;;;;;
; About memory usage ;
;;;;;;;;;;;;;;;;;;;;;

; Memory limit allows you to set the maximum amount of memory in bytes that a
; script is allowed to allocate.
; WARNING: Always set this value to match your server's available RAM!
; Setting this value too low may cause unexpected memory exhaustion errors.

memory_limit = 128M

;;;;;;;;;;;;;;;;;;;;;;;;;
; About execution time ;
;;;;;;;;;;;;;;;;;;;;;;;;;

; Maximum execution time allows you to set the maximum number of seconds a script
; is allowed to run before being terminated by the parser.

max_execution_time = 30

;;;;;;;;;;;;;;;;;;;;;;
; About file uploads ;
;;;;;;;;;;;;;;;;;;;;;;

; Maximum allowed size for uploaded files.
upload_max_filesize = 10M

; Must be greater than or equal to upload_max_filesize
post_max_size = 20M

;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Dynamic Extensions (Modules) ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;

; If you wish to have an extension loaded automatically, use the following syntax:
;   extension=modulename.extension
;
; For example, on Windows:
;   extension=mysqli
;
; ... or under UNIX:
;   extension=mysqli.so
;
; Note that it should be the name of the module only; no directory prefixes or
; suffixes should be added.

;extension=bcmath
;extension=curl
;extension=gd
;extension=gettext
;extension=gmp
;extension=intl
extension=mbstring
extension=mysqli
;extension=pcntl
extension=pdo_mysql
;extension=shmop
;extension=soap
;extension=sockets
;extension=sodium
;extension=sysvmsg
;extension=sysvsem
;extension=sysvshm
;extension=xmlrpc
;extension=xsl
pdo_mysql.default_socket= /var/lib/mysql/mysql.sock
;;;;;;;;;;;;;;;;;;
; Miscellaneous ;
;;;;;;;;;;;;;;;;;;

; Set the default timezone.
date.timezone = "Asia/Shanghai"


; display_errors allows you to toggle error reporting on/off.
; This is a useful debugging aid during development, but it could be used to
; circumvent your server's security settings in some situations.
; It is recommended that you set this value to "Off" in production environments.

display_errors = Off

; Enable or disable PHP functions based on current environment.
; For example, you could disable dangerous functions like exec and eval in
; production environments to improve security.

disable_functions = exec,passthru,shell_exec,system

; Enable or disable certain PHP features based on current environment.
; For example, you could disable file uploads in production environments
; to improve security.

disable_functions = exec,passthru,shell_exec,system
